program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3402.3.2"}, {"coremlc-version", "3402.4.1"}, {"coremltools-component-torch", "1.13.1+cu117"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.3.0"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 512, 512]> input) {
            tensor<fp32, []> input__scaled___y_0 = const()[name = tensor<string, []>("input__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 512, 512]> input__scaled__ = mul(x = input, y = input__scaled___y_0)[name = tensor<string, []>("input__scaled__")];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_1_strides_0 = const()[name = tensor<string, []>("input_1_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_1_dilations_0 = const()[name = tensor<string, []>("input_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_1_groups_0 = const()[name = tensor<string, []>("input_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> input_to_fp16_dtype_0 = const()[name = tensor<string, []>("input_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [32, 3, 3, 3]> const_0_to_fp16 = const()[name = tensor<string, []>("const_0_to_fp16"), val = tensor<fp16, [32, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [32]> const_1_to_fp16 = const()[name = tensor<string, []>("const_1_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1856)))];
            tensor<fp16, [1, 3, 512, 512]> input_to_fp16 = cast(dtype = input_to_fp16_dtype_0, x = input__scaled__)[name = tensor<string, []>("cast_1")];
            tensor<fp16, [1, 32, 256, 256]> input_3_cast_fp16 = conv(bias = const_1_to_fp16, dilations = input_1_dilations_0, groups = input_1_groups_0, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = input_1_strides_0, weight = const_0_to_fp16, x = input_to_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<fp16, []> input_5_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_5_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_5_beta_0_to_fp16 = const()[name = tensor<string, []>("input_5_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 256, 256]> input_5_cast_fp16 = clip(alpha = input_5_alpha_0_to_fp16, beta = input_5_beta_0_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_7_groups_0 = const()[name = tensor<string, []>("input_7_groups_0"), val = tensor<int32, []>(32)];
            tensor<int32, [2]> input_7_strides_0 = const()[name = tensor<string, []>("input_7_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_7_dilations_0 = const()[name = tensor<string, []>("input_7_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [32, 1, 3, 3]> const_2_to_fp16 = const()[name = tensor<string, []>("const_2_to_fp16"), val = tensor<fp16, [32, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1984)))];
            tensor<fp16, [32]> const_3_to_fp16 = const()[name = tensor<string, []>("const_3_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2624)))];
            tensor<fp16, [1, 32, 256, 256]> input_9_cast_fp16 = conv(bias = const_3_to_fp16, dilations = input_7_dilations_0, groups = input_7_groups_0, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = input_7_strides_0, weight = const_2_to_fp16, x = input_5_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, []> input_11_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_11_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_11_beta_0_to_fp16 = const()[name = tensor<string, []>("input_11_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 32, 256, 256]> input_11_cast_fp16 = clip(alpha = input_11_alpha_0_to_fp16, beta = input_11_beta_0_to_fp16, x = input_9_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_13_strides_0 = const()[name = tensor<string, []>("input_13_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_13_dilations_0 = const()[name = tensor<string, []>("input_13_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_13_groups_0 = const()[name = tensor<string, []>("input_13_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [16, 32, 1, 1]> const_4_to_fp16 = const()[name = tensor<string, []>("const_4_to_fp16"), val = tensor<fp16, [16, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2752)))];
            tensor<fp16, [16]> const_5_to_fp16 = const()[name = tensor<string, []>("const_5_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3840)))];
            tensor<fp16, [1, 16, 256, 256]> input_15_cast_fp16 = conv(bias = const_5_to_fp16, dilations = input_13_dilations_0, groups = input_13_groups_0, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = input_13_strides_0, weight = const_4_to_fp16, x = input_11_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_17_strides_0 = const()[name = tensor<string, []>("input_17_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_17_dilations_0 = const()[name = tensor<string, []>("input_17_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_17_groups_0 = const()[name = tensor<string, []>("input_17_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [96, 16, 1, 1]> const_6_to_fp16 = const()[name = tensor<string, []>("const_6_to_fp16"), val = tensor<fp16, [96, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3968)))];
            tensor<fp16, [96]> const_7_to_fp16 = const()[name = tensor<string, []>("const_7_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7104)))];
            tensor<fp16, [1, 96, 256, 256]> input_19_cast_fp16 = conv(bias = const_7_to_fp16, dilations = input_17_dilations_0, groups = input_17_groups_0, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = input_17_strides_0, weight = const_6_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<fp16, []> input_21_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_21_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_21_beta_0_to_fp16 = const()[name = tensor<string, []>("input_21_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 96, 256, 256]> input_21_cast_fp16 = clip(alpha = input_21_alpha_0_to_fp16, beta = input_21_beta_0_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<string, []> input_23_pad_type_0 = const()[name = tensor<string, []>("input_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_23_pad_0 = const()[name = tensor<string, []>("input_23_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_23_strides_0 = const()[name = tensor<string, []>("input_23_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_23_groups_0 = const()[name = tensor<string, []>("input_23_groups_0"), val = tensor<int32, []>(96)];
            tensor<int32, [2]> input_23_dilations_0 = const()[name = tensor<string, []>("input_23_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [96, 1, 3, 3]> const_8_to_fp16 = const()[name = tensor<string, []>("const_8_to_fp16"), val = tensor<fp16, [96, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7360)))];
            tensor<fp16, [96]> const_9_to_fp16 = const()[name = tensor<string, []>("const_9_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9152)))];
            tensor<fp16, [1, 96, 128, 128]> input_25_cast_fp16 = conv(bias = const_9_to_fp16, dilations = input_23_dilations_0, groups = input_23_groups_0, pad = input_23_pad_0, pad_type = input_23_pad_type_0, strides = input_23_strides_0, weight = const_8_to_fp16, x = input_21_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, []> input_27_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_27_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_27_beta_0_to_fp16 = const()[name = tensor<string, []>("input_27_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 96, 128, 128]> input_27_cast_fp16 = clip(alpha = input_27_alpha_0_to_fp16, beta = input_27_beta_0_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_29_strides_0 = const()[name = tensor<string, []>("input_29_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_29_dilations_0 = const()[name = tensor<string, []>("input_29_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_29_groups_0 = const()[name = tensor<string, []>("input_29_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [24, 96, 1, 1]> const_10_to_fp16 = const()[name = tensor<string, []>("const_10_to_fp16"), val = tensor<fp16, [24, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9408)))];
            tensor<fp16, [24]> const_11_to_fp16 = const()[name = tensor<string, []>("const_11_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14080)))];
            tensor<fp16, [1, 24, 128, 128]> input_31_cast_fp16 = conv(bias = const_11_to_fp16, dilations = input_29_dilations_0, groups = input_29_groups_0, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = input_29_strides_0, weight = const_10_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_33_strides_0 = const()[name = tensor<string, []>("input_33_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_33_dilations_0 = const()[name = tensor<string, []>("input_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_33_groups_0 = const()[name = tensor<string, []>("input_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [144, 24, 1, 1]> const_12_to_fp16 = const()[name = tensor<string, []>("const_12_to_fp16"), val = tensor<fp16, [144, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14208)))];
            tensor<fp16, [144]> const_13_to_fp16 = const()[name = tensor<string, []>("const_13_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21184)))];
            tensor<fp16, [1, 144, 128, 128]> input_35_cast_fp16 = conv(bias = const_13_to_fp16, dilations = input_33_dilations_0, groups = input_33_groups_0, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = input_33_strides_0, weight = const_12_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<fp16, []> input_37_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_37_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_37_beta_0_to_fp16 = const()[name = tensor<string, []>("input_37_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 144, 128, 128]> input_37_cast_fp16 = clip(alpha = input_37_alpha_0_to_fp16, beta = input_37_beta_0_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_pad_type_0 = const()[name = tensor<string, []>("input_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_39_pad_0 = const()[name = tensor<string, []>("input_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_39_groups_0 = const()[name = tensor<string, []>("input_39_groups_0"), val = tensor<int32, []>(144)];
            tensor<int32, [2]> input_39_strides_0 = const()[name = tensor<string, []>("input_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_39_dilations_0 = const()[name = tensor<string, []>("input_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [144, 1, 3, 3]> const_14_to_fp16 = const()[name = tensor<string, []>("const_14_to_fp16"), val = tensor<fp16, [144, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21568)))];
            tensor<fp16, [144]> const_15_to_fp16 = const()[name = tensor<string, []>("const_15_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24256)))];
            tensor<fp16, [1, 144, 128, 128]> input_41_cast_fp16 = conv(bias = const_15_to_fp16, dilations = input_39_dilations_0, groups = input_39_groups_0, pad = input_39_pad_0, pad_type = input_39_pad_type_0, strides = input_39_strides_0, weight = const_14_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, []> input_43_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_43_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_43_beta_0_to_fp16 = const()[name = tensor<string, []>("input_43_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 144, 128, 128]> input_43_cast_fp16 = clip(alpha = input_43_alpha_0_to_fp16, beta = input_43_beta_0_to_fp16, x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_45_strides_0 = const()[name = tensor<string, []>("input_45_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_45_dilations_0 = const()[name = tensor<string, []>("input_45_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_45_groups_0 = const()[name = tensor<string, []>("input_45_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [24, 144, 1, 1]> const_16_to_fp16 = const()[name = tensor<string, []>("const_16_to_fp16"), val = tensor<fp16, [24, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24640)))];
            tensor<fp16, [24]> const_17_to_fp16 = const()[name = tensor<string, []>("const_17_to_fp16"), val = tensor<fp16, [24]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31616)))];
            tensor<fp16, [1, 24, 128, 128]> var_190_cast_fp16 = conv(bias = const_17_to_fp16, dilations = input_45_dilations_0, groups = input_45_groups_0, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = input_45_strides_0, weight = const_16_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("op_190_cast_fp16")];
            tensor<fp16, [1, 24, 128, 128]> input_47_cast_fp16 = add(x = input_31_cast_fp16, y = var_190_cast_fp16)[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_49_strides_0 = const()[name = tensor<string, []>("input_49_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_49_dilations_0 = const()[name = tensor<string, []>("input_49_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_49_groups_0 = const()[name = tensor<string, []>("input_49_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [144, 24, 1, 1]> const_18_to_fp16 = const()[name = tensor<string, []>("const_18_to_fp16"), val = tensor<fp16, [144, 24, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31744)))];
            tensor<fp16, [144]> const_19_to_fp16 = const()[name = tensor<string, []>("const_19_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38720)))];
            tensor<fp16, [1, 144, 128, 128]> input_51_cast_fp16 = conv(bias = const_19_to_fp16, dilations = input_49_dilations_0, groups = input_49_groups_0, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = input_49_strides_0, weight = const_18_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<fp16, []> input_53_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_53_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_53_beta_0_to_fp16 = const()[name = tensor<string, []>("input_53_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 144, 128, 128]> input_53_cast_fp16 = clip(alpha = input_53_alpha_0_to_fp16, beta = input_53_beta_0_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<string, []> input_55_pad_type_0 = const()[name = tensor<string, []>("input_55_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_55_pad_0 = const()[name = tensor<string, []>("input_55_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_55_strides_0 = const()[name = tensor<string, []>("input_55_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_55_groups_0 = const()[name = tensor<string, []>("input_55_groups_0"), val = tensor<int32, []>(144)];
            tensor<int32, [2]> input_55_dilations_0 = const()[name = tensor<string, []>("input_55_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [144, 1, 3, 3]> const_20_to_fp16 = const()[name = tensor<string, []>("const_20_to_fp16"), val = tensor<fp16, [144, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39104)))];
            tensor<fp16, [144]> const_21_to_fp16 = const()[name = tensor<string, []>("const_21_to_fp16"), val = tensor<fp16, [144]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41792)))];
            tensor<fp16, [1, 144, 64, 64]> input_57_cast_fp16 = conv(bias = const_21_to_fp16, dilations = input_55_dilations_0, groups = input_55_groups_0, pad = input_55_pad_0, pad_type = input_55_pad_type_0, strides = input_55_strides_0, weight = const_20_to_fp16, x = input_53_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, []> input_59_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_59_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_59_beta_0_to_fp16 = const()[name = tensor<string, []>("input_59_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 144, 64, 64]> input_59_cast_fp16 = clip(alpha = input_59_alpha_0_to_fp16, beta = input_59_beta_0_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("input_59_cast_fp16")];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_61_strides_0 = const()[name = tensor<string, []>("input_61_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_61_dilations_0 = const()[name = tensor<string, []>("input_61_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_61_groups_0 = const()[name = tensor<string, []>("input_61_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 144, 1, 1]> const_22_to_fp16 = const()[name = tensor<string, []>("const_22_to_fp16"), val = tensor<fp16, [32, 144, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42176)))];
            tensor<fp16, [32]> const_23_to_fp16 = const()[name = tensor<string, []>("const_23_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51456)))];
            tensor<fp16, [1, 32, 64, 64]> input_63_cast_fp16 = conv(bias = const_23_to_fp16, dilations = input_61_dilations_0, groups = input_61_groups_0, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = input_61_strides_0, weight = const_22_to_fp16, x = input_59_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_65_strides_0 = const()[name = tensor<string, []>("input_65_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_65_dilations_0 = const()[name = tensor<string, []>("input_65_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_65_groups_0 = const()[name = tensor<string, []>("input_65_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [192, 32, 1, 1]> const_24_to_fp16 = const()[name = tensor<string, []>("const_24_to_fp16"), val = tensor<fp16, [192, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51584)))];
            tensor<fp16, [192]> const_25_to_fp16 = const()[name = tensor<string, []>("const_25_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63936)))];
            tensor<fp16, [1, 192, 64, 64]> input_67_cast_fp16 = conv(bias = const_25_to_fp16, dilations = input_65_dilations_0, groups = input_65_groups_0, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = input_65_strides_0, weight = const_24_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<fp16, []> input_69_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_69_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_69_beta_0_to_fp16 = const()[name = tensor<string, []>("input_69_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 192, 64, 64]> input_69_cast_fp16 = clip(alpha = input_69_alpha_0_to_fp16, beta = input_69_beta_0_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<string, []> input_71_pad_type_0 = const()[name = tensor<string, []>("input_71_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_71_pad_0 = const()[name = tensor<string, []>("input_71_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_71_groups_0 = const()[name = tensor<string, []>("input_71_groups_0"), val = tensor<int32, []>(192)];
            tensor<int32, [2]> input_71_strides_0 = const()[name = tensor<string, []>("input_71_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_71_dilations_0 = const()[name = tensor<string, []>("input_71_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [192, 1, 3, 3]> const_26_to_fp16 = const()[name = tensor<string, []>("const_26_to_fp16"), val = tensor<fp16, [192, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64384)))];
            tensor<fp16, [192]> const_27_to_fp16 = const()[name = tensor<string, []>("const_27_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67904)))];
            tensor<fp16, [1, 192, 64, 64]> input_73_cast_fp16 = conv(bias = const_27_to_fp16, dilations = input_71_dilations_0, groups = input_71_groups_0, pad = input_71_pad_0, pad_type = input_71_pad_type_0, strides = input_71_strides_0, weight = const_26_to_fp16, x = input_69_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, []> input_75_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_75_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_75_beta_0_to_fp16 = const()[name = tensor<string, []>("input_75_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 192, 64, 64]> input_75_cast_fp16 = clip(alpha = input_75_alpha_0_to_fp16, beta = input_75_beta_0_to_fp16, x = input_73_cast_fp16)[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_77_strides_0 = const()[name = tensor<string, []>("input_77_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_77_dilations_0 = const()[name = tensor<string, []>("input_77_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_77_groups_0 = const()[name = tensor<string, []>("input_77_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 192, 1, 1]> const_28_to_fp16 = const()[name = tensor<string, []>("const_28_to_fp16"), val = tensor<fp16, [32, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68352)))];
            tensor<fp16, [32]> const_29_to_fp16 = const()[name = tensor<string, []>("const_29_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80704)))];
            tensor<fp16, [1, 32, 64, 64]> var_279_cast_fp16 = conv(bias = const_29_to_fp16, dilations = input_77_dilations_0, groups = input_77_groups_0, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = input_77_strides_0, weight = const_28_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("op_279_cast_fp16")];
            tensor<fp16, [1, 32, 64, 64]> input_79_cast_fp16 = add(x = input_63_cast_fp16, y = var_279_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_81_strides_0 = const()[name = tensor<string, []>("input_81_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_81_dilations_0 = const()[name = tensor<string, []>("input_81_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_81_groups_0 = const()[name = tensor<string, []>("input_81_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [192, 32, 1, 1]> const_30_to_fp16 = const()[name = tensor<string, []>("const_30_to_fp16"), val = tensor<fp16, [192, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80832)))];
            tensor<fp16, [192]> const_31_to_fp16 = const()[name = tensor<string, []>("const_31_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93184)))];
            tensor<fp16, [1, 192, 64, 64]> input_83_cast_fp16 = conv(bias = const_31_to_fp16, dilations = input_81_dilations_0, groups = input_81_groups_0, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = input_81_strides_0, weight = const_30_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<fp16, []> input_85_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_85_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_85_beta_0_to_fp16 = const()[name = tensor<string, []>("input_85_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 192, 64, 64]> input_85_cast_fp16 = clip(alpha = input_85_alpha_0_to_fp16, beta = input_85_beta_0_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<string, []> input_87_pad_type_0 = const()[name = tensor<string, []>("input_87_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_87_pad_0 = const()[name = tensor<string, []>("input_87_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_87_groups_0 = const()[name = tensor<string, []>("input_87_groups_0"), val = tensor<int32, []>(192)];
            tensor<int32, [2]> input_87_strides_0 = const()[name = tensor<string, []>("input_87_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_87_dilations_0 = const()[name = tensor<string, []>("input_87_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [192, 1, 3, 3]> const_32_to_fp16 = const()[name = tensor<string, []>("const_32_to_fp16"), val = tensor<fp16, [192, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93632)))];
            tensor<fp16, [192]> const_33_to_fp16 = const()[name = tensor<string, []>("const_33_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97152)))];
            tensor<fp16, [1, 192, 64, 64]> input_89_cast_fp16 = conv(bias = const_33_to_fp16, dilations = input_87_dilations_0, groups = input_87_groups_0, pad = input_87_pad_0, pad_type = input_87_pad_type_0, strides = input_87_strides_0, weight = const_32_to_fp16, x = input_85_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, []> input_91_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_91_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_91_beta_0_to_fp16 = const()[name = tensor<string, []>("input_91_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 192, 64, 64]> input_91_cast_fp16 = clip(alpha = input_91_alpha_0_to_fp16, beta = input_91_beta_0_to_fp16, x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_93_strides_0 = const()[name = tensor<string, []>("input_93_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_93_dilations_0 = const()[name = tensor<string, []>("input_93_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_93_groups_0 = const()[name = tensor<string, []>("input_93_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 192, 1, 1]> const_34_to_fp16 = const()[name = tensor<string, []>("const_34_to_fp16"), val = tensor<fp16, [32, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(97600)))];
            tensor<fp16, [32]> const_35_to_fp16 = const()[name = tensor<string, []>("const_35_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(109952)))];
            tensor<fp16, [1, 32, 64, 64]> var_324_cast_fp16 = conv(bias = const_35_to_fp16, dilations = input_93_dilations_0, groups = input_93_groups_0, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = input_93_strides_0, weight = const_34_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("op_324_cast_fp16")];
            tensor<fp16, [1, 32, 64, 64]> input_95_cast_fp16 = add(x = input_79_cast_fp16, y = var_324_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_97_strides_0 = const()[name = tensor<string, []>("input_97_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_97_dilations_0 = const()[name = tensor<string, []>("input_97_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_97_groups_0 = const()[name = tensor<string, []>("input_97_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [192, 32, 1, 1]> const_36_to_fp16 = const()[name = tensor<string, []>("const_36_to_fp16"), val = tensor<fp16, [192, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(110080)))];
            tensor<fp16, [192]> const_37_to_fp16 = const()[name = tensor<string, []>("const_37_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122432)))];
            tensor<fp16, [1, 192, 64, 64]> input_99_cast_fp16 = conv(bias = const_37_to_fp16, dilations = input_97_dilations_0, groups = input_97_groups_0, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = input_97_strides_0, weight = const_36_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<fp16, []> input_101_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_101_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_101_beta_0_to_fp16 = const()[name = tensor<string, []>("input_101_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 192, 64, 64]> input_101_cast_fp16 = clip(alpha = input_101_alpha_0_to_fp16, beta = input_101_beta_0_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<string, []> input_103_pad_type_0 = const()[name = tensor<string, []>("input_103_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_103_pad_0 = const()[name = tensor<string, []>("input_103_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_103_strides_0 = const()[name = tensor<string, []>("input_103_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_103_groups_0 = const()[name = tensor<string, []>("input_103_groups_0"), val = tensor<int32, []>(192)];
            tensor<int32, [2]> input_103_dilations_0 = const()[name = tensor<string, []>("input_103_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [192, 1, 3, 3]> const_38_to_fp16 = const()[name = tensor<string, []>("const_38_to_fp16"), val = tensor<fp16, [192, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(122880)))];
            tensor<fp16, [192]> const_39_to_fp16 = const()[name = tensor<string, []>("const_39_to_fp16"), val = tensor<fp16, [192]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126400)))];
            tensor<fp16, [1, 192, 32, 32]> input_105_cast_fp16 = conv(bias = const_39_to_fp16, dilations = input_103_dilations_0, groups = input_103_groups_0, pad = input_103_pad_0, pad_type = input_103_pad_type_0, strides = input_103_strides_0, weight = const_38_to_fp16, x = input_101_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<fp16, []> input_107_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_107_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_107_beta_0_to_fp16 = const()[name = tensor<string, []>("input_107_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 192, 32, 32]> input_107_cast_fp16 = clip(alpha = input_107_alpha_0_to_fp16, beta = input_107_beta_0_to_fp16, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<string, []> input_109_pad_type_0 = const()[name = tensor<string, []>("input_109_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_109_strides_0 = const()[name = tensor<string, []>("input_109_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_109_pad_0 = const()[name = tensor<string, []>("input_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_109_dilations_0 = const()[name = tensor<string, []>("input_109_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_109_groups_0 = const()[name = tensor<string, []>("input_109_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 192, 1, 1]> const_40_to_fp16 = const()[name = tensor<string, []>("const_40_to_fp16"), val = tensor<fp16, [64, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126848)))];
            tensor<fp16, [64]> const_41_to_fp16 = const()[name = tensor<string, []>("const_41_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151488)))];
            tensor<fp16, [1, 64, 32, 32]> input_111_cast_fp16 = conv(bias = const_41_to_fp16, dilations = input_109_dilations_0, groups = input_109_groups_0, pad = input_109_pad_0, pad_type = input_109_pad_type_0, strides = input_109_strides_0, weight = const_40_to_fp16, x = input_107_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<string, []> input_113_pad_type_0 = const()[name = tensor<string, []>("input_113_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_113_strides_0 = const()[name = tensor<string, []>("input_113_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_113_pad_0 = const()[name = tensor<string, []>("input_113_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_113_dilations_0 = const()[name = tensor<string, []>("input_113_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_113_groups_0 = const()[name = tensor<string, []>("input_113_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [384, 64, 1, 1]> const_42_to_fp16 = const()[name = tensor<string, []>("const_42_to_fp16"), val = tensor<fp16, [384, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(151680)))];
            tensor<fp16, [384]> const_43_to_fp16 = const()[name = tensor<string, []>("const_43_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(200896)))];
            tensor<fp16, [1, 384, 32, 32]> input_115_cast_fp16 = conv(bias = const_43_to_fp16, dilations = input_113_dilations_0, groups = input_113_groups_0, pad = input_113_pad_0, pad_type = input_113_pad_type_0, strides = input_113_strides_0, weight = const_42_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<fp16, []> input_117_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_117_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_117_beta_0_to_fp16 = const()[name = tensor<string, []>("input_117_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_117_cast_fp16 = clip(alpha = input_117_alpha_0_to_fp16, beta = input_117_beta_0_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_119_groups_0 = const()[name = tensor<string, []>("input_119_groups_0"), val = tensor<int32, []>(384)];
            tensor<int32, [2]> input_119_strides_0 = const()[name = tensor<string, []>("input_119_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_119_dilations_0 = const()[name = tensor<string, []>("input_119_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [384, 1, 3, 3]> const_44_to_fp16 = const()[name = tensor<string, []>("const_44_to_fp16"), val = tensor<fp16, [384, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(201728)))];
            tensor<fp16, [384]> const_45_to_fp16 = const()[name = tensor<string, []>("const_45_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(208704)))];
            tensor<fp16, [1, 384, 32, 32]> input_121_cast_fp16 = conv(bias = const_45_to_fp16, dilations = input_119_dilations_0, groups = input_119_groups_0, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = input_119_strides_0, weight = const_44_to_fp16, x = input_117_cast_fp16)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, []> input_123_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_123_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_123_beta_0_to_fp16 = const()[name = tensor<string, []>("input_123_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_123_cast_fp16 = clip(alpha = input_123_alpha_0_to_fp16, beta = input_123_beta_0_to_fp16, x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_125_strides_0 = const()[name = tensor<string, []>("input_125_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_125_dilations_0 = const()[name = tensor<string, []>("input_125_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_125_groups_0 = const()[name = tensor<string, []>("input_125_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 384, 1, 1]> const_46_to_fp16 = const()[name = tensor<string, []>("const_46_to_fp16"), val = tensor<fp16, [64, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(209536)))];
            tensor<fp16, [64]> const_47_to_fp16 = const()[name = tensor<string, []>("const_47_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258752)))];
            tensor<fp16, [1, 64, 32, 32]> var_413_cast_fp16 = conv(bias = const_47_to_fp16, dilations = input_125_dilations_0, groups = input_125_groups_0, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = input_125_strides_0, weight = const_46_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("op_413_cast_fp16")];
            tensor<fp16, [1, 64, 32, 32]> input_127_cast_fp16 = add(x = input_111_cast_fp16, y = var_413_cast_fp16)[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_129_strides_0 = const()[name = tensor<string, []>("input_129_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_129_dilations_0 = const()[name = tensor<string, []>("input_129_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_129_groups_0 = const()[name = tensor<string, []>("input_129_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [384, 64, 1, 1]> const_48_to_fp16 = const()[name = tensor<string, []>("const_48_to_fp16"), val = tensor<fp16, [384, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(258944)))];
            tensor<fp16, [384]> const_49_to_fp16 = const()[name = tensor<string, []>("const_49_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(308160)))];
            tensor<fp16, [1, 384, 32, 32]> input_131_cast_fp16 = conv(bias = const_49_to_fp16, dilations = input_129_dilations_0, groups = input_129_groups_0, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = input_129_strides_0, weight = const_48_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp16, []> input_133_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_133_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_133_beta_0_to_fp16 = const()[name = tensor<string, []>("input_133_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_133_cast_fp16 = clip(alpha = input_133_alpha_0_to_fp16, beta = input_133_beta_0_to_fp16, x = input_131_cast_fp16)[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_135_groups_0 = const()[name = tensor<string, []>("input_135_groups_0"), val = tensor<int32, []>(384)];
            tensor<int32, [2]> input_135_strides_0 = const()[name = tensor<string, []>("input_135_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_135_dilations_0 = const()[name = tensor<string, []>("input_135_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [384, 1, 3, 3]> const_50_to_fp16 = const()[name = tensor<string, []>("const_50_to_fp16"), val = tensor<fp16, [384, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(308992)))];
            tensor<fp16, [384]> const_51_to_fp16 = const()[name = tensor<string, []>("const_51_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(315968)))];
            tensor<fp16, [1, 384, 32, 32]> input_137_cast_fp16 = conv(bias = const_51_to_fp16, dilations = input_135_dilations_0, groups = input_135_groups_0, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = input_135_strides_0, weight = const_50_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_137_cast_fp16")];
            tensor<fp16, []> input_139_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_139_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_139_beta_0_to_fp16 = const()[name = tensor<string, []>("input_139_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_139_cast_fp16 = clip(alpha = input_139_alpha_0_to_fp16, beta = input_139_beta_0_to_fp16, x = input_137_cast_fp16)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<string, []> input_141_pad_type_0 = const()[name = tensor<string, []>("input_141_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_141_strides_0 = const()[name = tensor<string, []>("input_141_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_141_pad_0 = const()[name = tensor<string, []>("input_141_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_141_dilations_0 = const()[name = tensor<string, []>("input_141_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_141_groups_0 = const()[name = tensor<string, []>("input_141_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 384, 1, 1]> const_52_to_fp16 = const()[name = tensor<string, []>("const_52_to_fp16"), val = tensor<fp16, [64, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(316800)))];
            tensor<fp16, [64]> const_53_to_fp16 = const()[name = tensor<string, []>("const_53_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(366016)))];
            tensor<fp16, [1, 64, 32, 32]> var_458_cast_fp16 = conv(bias = const_53_to_fp16, dilations = input_141_dilations_0, groups = input_141_groups_0, pad = input_141_pad_0, pad_type = input_141_pad_type_0, strides = input_141_strides_0, weight = const_52_to_fp16, x = input_139_cast_fp16)[name = tensor<string, []>("op_458_cast_fp16")];
            tensor<fp16, [1, 64, 32, 32]> input_143_cast_fp16 = add(x = input_127_cast_fp16, y = var_458_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<string, []> input_145_pad_type_0 = const()[name = tensor<string, []>("input_145_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_145_strides_0 = const()[name = tensor<string, []>("input_145_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_145_pad_0 = const()[name = tensor<string, []>("input_145_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_145_dilations_0 = const()[name = tensor<string, []>("input_145_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_145_groups_0 = const()[name = tensor<string, []>("input_145_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [384, 64, 1, 1]> const_54_to_fp16 = const()[name = tensor<string, []>("const_54_to_fp16"), val = tensor<fp16, [384, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(366208)))];
            tensor<fp16, [384]> const_55_to_fp16 = const()[name = tensor<string, []>("const_55_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(415424)))];
            tensor<fp16, [1, 384, 32, 32]> input_147_cast_fp16 = conv(bias = const_55_to_fp16, dilations = input_145_dilations_0, groups = input_145_groups_0, pad = input_145_pad_0, pad_type = input_145_pad_type_0, strides = input_145_strides_0, weight = const_54_to_fp16, x = input_143_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<fp16, []> input_149_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_149_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_149_beta_0_to_fp16 = const()[name = tensor<string, []>("input_149_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_149_cast_fp16 = clip(alpha = input_149_alpha_0_to_fp16, beta = input_149_beta_0_to_fp16, x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_151_groups_0 = const()[name = tensor<string, []>("input_151_groups_0"), val = tensor<int32, []>(384)];
            tensor<int32, [2]> input_151_strides_0 = const()[name = tensor<string, []>("input_151_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_151_dilations_0 = const()[name = tensor<string, []>("input_151_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [384, 1, 3, 3]> const_56_to_fp16 = const()[name = tensor<string, []>("const_56_to_fp16"), val = tensor<fp16, [384, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(416256)))];
            tensor<fp16, [384]> const_57_to_fp16 = const()[name = tensor<string, []>("const_57_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(423232)))];
            tensor<fp16, [1, 384, 32, 32]> input_153_cast_fp16 = conv(bias = const_57_to_fp16, dilations = input_151_dilations_0, groups = input_151_groups_0, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = input_151_strides_0, weight = const_56_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<fp16, []> input_155_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_155_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_155_beta_0_to_fp16 = const()[name = tensor<string, []>("input_155_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_155_cast_fp16 = clip(alpha = input_155_alpha_0_to_fp16, beta = input_155_beta_0_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<string, []> input_157_pad_type_0 = const()[name = tensor<string, []>("input_157_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_157_strides_0 = const()[name = tensor<string, []>("input_157_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_157_pad_0 = const()[name = tensor<string, []>("input_157_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_157_dilations_0 = const()[name = tensor<string, []>("input_157_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_157_groups_0 = const()[name = tensor<string, []>("input_157_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 384, 1, 1]> const_58_to_fp16 = const()[name = tensor<string, []>("const_58_to_fp16"), val = tensor<fp16, [64, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(424064)))];
            tensor<fp16, [64]> const_59_to_fp16 = const()[name = tensor<string, []>("const_59_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473280)))];
            tensor<fp16, [1, 64, 32, 32]> var_503_cast_fp16 = conv(bias = const_59_to_fp16, dilations = input_157_dilations_0, groups = input_157_groups_0, pad = input_157_pad_0, pad_type = input_157_pad_type_0, strides = input_157_strides_0, weight = const_58_to_fp16, x = input_155_cast_fp16)[name = tensor<string, []>("op_503_cast_fp16")];
            tensor<fp16, [1, 64, 32, 32]> input_159_cast_fp16 = add(x = input_143_cast_fp16, y = var_503_cast_fp16)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<string, []> input_161_pad_type_0 = const()[name = tensor<string, []>("input_161_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_161_strides_0 = const()[name = tensor<string, []>("input_161_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_161_pad_0 = const()[name = tensor<string, []>("input_161_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_161_dilations_0 = const()[name = tensor<string, []>("input_161_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_161_groups_0 = const()[name = tensor<string, []>("input_161_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [384, 64, 1, 1]> const_60_to_fp16 = const()[name = tensor<string, []>("const_60_to_fp16"), val = tensor<fp16, [384, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473472)))];
            tensor<fp16, [384]> const_61_to_fp16 = const()[name = tensor<string, []>("const_61_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(522688)))];
            tensor<fp16, [1, 384, 32, 32]> input_163_cast_fp16 = conv(bias = const_61_to_fp16, dilations = input_161_dilations_0, groups = input_161_groups_0, pad = input_161_pad_0, pad_type = input_161_pad_type_0, strides = input_161_strides_0, weight = const_60_to_fp16, x = input_159_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, []> input_165_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_165_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_165_beta_0_to_fp16 = const()[name = tensor<string, []>("input_165_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_165_cast_fp16 = clip(alpha = input_165_alpha_0_to_fp16, beta = input_165_beta_0_to_fp16, x = input_163_cast_fp16)[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_167_groups_0 = const()[name = tensor<string, []>("input_167_groups_0"), val = tensor<int32, []>(384)];
            tensor<int32, [2]> input_167_strides_0 = const()[name = tensor<string, []>("input_167_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_167_dilations_0 = const()[name = tensor<string, []>("input_167_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [384, 1, 3, 3]> const_62_to_fp16 = const()[name = tensor<string, []>("const_62_to_fp16"), val = tensor<fp16, [384, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(523520)))];
            tensor<fp16, [384]> const_63_to_fp16 = const()[name = tensor<string, []>("const_63_to_fp16"), val = tensor<fp16, [384]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(530496)))];
            tensor<fp16, [1, 384, 32, 32]> input_169_cast_fp16 = conv(bias = const_63_to_fp16, dilations = input_167_dilations_0, groups = input_167_groups_0, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = input_167_strides_0, weight = const_62_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<fp16, []> input_171_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_171_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_171_beta_0_to_fp16 = const()[name = tensor<string, []>("input_171_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 384, 32, 32]> input_171_cast_fp16 = clip(alpha = input_171_alpha_0_to_fp16, beta = input_171_beta_0_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<string, []> input_173_pad_type_0 = const()[name = tensor<string, []>("input_173_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_173_strides_0 = const()[name = tensor<string, []>("input_173_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_173_pad_0 = const()[name = tensor<string, []>("input_173_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_173_dilations_0 = const()[name = tensor<string, []>("input_173_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_173_groups_0 = const()[name = tensor<string, []>("input_173_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [96, 384, 1, 1]> const_64_to_fp16 = const()[name = tensor<string, []>("const_64_to_fp16"), val = tensor<fp16, [96, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(531328)))];
            tensor<fp16, [96]> const_65_to_fp16 = const()[name = tensor<string, []>("const_65_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(605120)))];
            tensor<fp16, [1, 96, 32, 32]> input_175_cast_fp16 = conv(bias = const_65_to_fp16, dilations = input_173_dilations_0, groups = input_173_groups_0, pad = input_173_pad_0, pad_type = input_173_pad_type_0, strides = input_173_strides_0, weight = const_64_to_fp16, x = input_171_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<string, []> input_177_pad_type_0 = const()[name = tensor<string, []>("input_177_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_177_strides_0 = const()[name = tensor<string, []>("input_177_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_177_pad_0 = const()[name = tensor<string, []>("input_177_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_177_dilations_0 = const()[name = tensor<string, []>("input_177_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_177_groups_0 = const()[name = tensor<string, []>("input_177_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [576, 96, 1, 1]> const_66_to_fp16 = const()[name = tensor<string, []>("const_66_to_fp16"), val = tensor<fp16, [576, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(605376)))];
            tensor<fp16, [576]> const_67_to_fp16 = const()[name = tensor<string, []>("const_67_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(716032)))];
            tensor<fp16, [1, 576, 32, 32]> input_179_cast_fp16 = conv(bias = const_67_to_fp16, dilations = input_177_dilations_0, groups = input_177_groups_0, pad = input_177_pad_0, pad_type = input_177_pad_type_0, strides = input_177_strides_0, weight = const_66_to_fp16, x = input_175_cast_fp16)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<fp16, []> input_181_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_181_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_181_beta_0_to_fp16 = const()[name = tensor<string, []>("input_181_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 576, 32, 32]> input_181_cast_fp16 = clip(alpha = input_181_alpha_0_to_fp16, beta = input_181_beta_0_to_fp16, x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<string, []> input_183_pad_type_0 = const()[name = tensor<string, []>("input_183_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_183_pad_0 = const()[name = tensor<string, []>("input_183_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_183_groups_0 = const()[name = tensor<string, []>("input_183_groups_0"), val = tensor<int32, []>(576)];
            tensor<int32, [2]> input_183_strides_0 = const()[name = tensor<string, []>("input_183_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_183_dilations_0 = const()[name = tensor<string, []>("input_183_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [576, 1, 3, 3]> const_68_to_fp16 = const()[name = tensor<string, []>("const_68_to_fp16"), val = tensor<fp16, [576, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(717248)))];
            tensor<fp16, [576]> const_69_to_fp16 = const()[name = tensor<string, []>("const_69_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(727680)))];
            tensor<fp16, [1, 576, 32, 32]> input_185_cast_fp16 = conv(bias = const_69_to_fp16, dilations = input_183_dilations_0, groups = input_183_groups_0, pad = input_183_pad_0, pad_type = input_183_pad_type_0, strides = input_183_strides_0, weight = const_68_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<fp16, []> input_187_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_187_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_187_beta_0_to_fp16 = const()[name = tensor<string, []>("input_187_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 576, 32, 32]> input_187_cast_fp16 = clip(alpha = input_187_alpha_0_to_fp16, beta = input_187_beta_0_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_189_strides_0 = const()[name = tensor<string, []>("input_189_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_189_dilations_0 = const()[name = tensor<string, []>("input_189_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_189_groups_0 = const()[name = tensor<string, []>("input_189_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [96, 576, 1, 1]> const_70_to_fp16 = const()[name = tensor<string, []>("const_70_to_fp16"), val = tensor<fp16, [96, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(728896)))];
            tensor<fp16, [96]> const_71_to_fp16 = const()[name = tensor<string, []>("const_71_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(839552)))];
            tensor<fp16, [1, 96, 32, 32]> var_592_cast_fp16 = conv(bias = const_71_to_fp16, dilations = input_189_dilations_0, groups = input_189_groups_0, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = input_189_strides_0, weight = const_70_to_fp16, x = input_187_cast_fp16)[name = tensor<string, []>("op_592_cast_fp16")];
            tensor<fp16, [1, 96, 32, 32]> input_191_cast_fp16 = add(x = input_175_cast_fp16, y = var_592_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_193_strides_0 = const()[name = tensor<string, []>("input_193_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_193_dilations_0 = const()[name = tensor<string, []>("input_193_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_193_groups_0 = const()[name = tensor<string, []>("input_193_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [576, 96, 1, 1]> const_72_to_fp16 = const()[name = tensor<string, []>("const_72_to_fp16"), val = tensor<fp16, [576, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(839808)))];
            tensor<fp16, [576]> const_73_to_fp16 = const()[name = tensor<string, []>("const_73_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(950464)))];
            tensor<fp16, [1, 576, 32, 32]> input_195_cast_fp16 = conv(bias = const_73_to_fp16, dilations = input_193_dilations_0, groups = input_193_groups_0, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = input_193_strides_0, weight = const_72_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<fp16, []> input_197_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_197_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_197_beta_0_to_fp16 = const()[name = tensor<string, []>("input_197_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 576, 32, 32]> input_197_cast_fp16 = clip(alpha = input_197_alpha_0_to_fp16, beta = input_197_beta_0_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<string, []> input_199_pad_type_0 = const()[name = tensor<string, []>("input_199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_199_pad_0 = const()[name = tensor<string, []>("input_199_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_199_groups_0 = const()[name = tensor<string, []>("input_199_groups_0"), val = tensor<int32, []>(576)];
            tensor<int32, [2]> input_199_strides_0 = const()[name = tensor<string, []>("input_199_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_199_dilations_0 = const()[name = tensor<string, []>("input_199_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [576, 1, 3, 3]> const_74_to_fp16 = const()[name = tensor<string, []>("const_74_to_fp16"), val = tensor<fp16, [576, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(951680)))];
            tensor<fp16, [576]> const_75_to_fp16 = const()[name = tensor<string, []>("const_75_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(962112)))];
            tensor<fp16, [1, 576, 32, 32]> input_201_cast_fp16 = conv(bias = const_75_to_fp16, dilations = input_199_dilations_0, groups = input_199_groups_0, pad = input_199_pad_0, pad_type = input_199_pad_type_0, strides = input_199_strides_0, weight = const_74_to_fp16, x = input_197_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, []> input_203_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_203_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_203_beta_0_to_fp16 = const()[name = tensor<string, []>("input_203_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 576, 32, 32]> input_203_cast_fp16 = clip(alpha = input_203_alpha_0_to_fp16, beta = input_203_beta_0_to_fp16, x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_205_strides_0 = const()[name = tensor<string, []>("input_205_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_205_dilations_0 = const()[name = tensor<string, []>("input_205_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_205_groups_0 = const()[name = tensor<string, []>("input_205_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [96, 576, 1, 1]> const_76_to_fp16 = const()[name = tensor<string, []>("const_76_to_fp16"), val = tensor<fp16, [96, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(963328)))];
            tensor<fp16, [96]> const_77_to_fp16 = const()[name = tensor<string, []>("const_77_to_fp16"), val = tensor<fp16, [96]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1073984)))];
            tensor<fp16, [1, 96, 32, 32]> var_637_cast_fp16 = conv(bias = const_77_to_fp16, dilations = input_205_dilations_0, groups = input_205_groups_0, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = input_205_strides_0, weight = const_76_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_637_cast_fp16")];
            tensor<fp16, [1, 96, 32, 32]> input_207_cast_fp16 = add(x = input_191_cast_fp16, y = var_637_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_209_strides_0 = const()[name = tensor<string, []>("input_209_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_209_dilations_0 = const()[name = tensor<string, []>("input_209_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_209_groups_0 = const()[name = tensor<string, []>("input_209_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [576, 96, 1, 1]> const_78_to_fp16 = const()[name = tensor<string, []>("const_78_to_fp16"), val = tensor<fp16, [576, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1074240)))];
            tensor<fp16, [576]> const_79_to_fp16 = const()[name = tensor<string, []>("const_79_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1184896)))];
            tensor<fp16, [1, 576, 32, 32]> input_211_cast_fp16 = conv(bias = const_79_to_fp16, dilations = input_209_dilations_0, groups = input_209_groups_0, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = input_209_strides_0, weight = const_78_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<fp16, []> input_213_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_213_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_213_beta_0_to_fp16 = const()[name = tensor<string, []>("input_213_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 576, 32, 32]> input_213_cast_fp16 = clip(alpha = input_213_alpha_0_to_fp16, beta = input_213_beta_0_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<string, []> input_215_pad_type_0 = const()[name = tensor<string, []>("input_215_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_215_pad_0 = const()[name = tensor<string, []>("input_215_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_215_strides_0 = const()[name = tensor<string, []>("input_215_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> input_215_groups_0 = const()[name = tensor<string, []>("input_215_groups_0"), val = tensor<int32, []>(576)];
            tensor<int32, [2]> input_215_dilations_0 = const()[name = tensor<string, []>("input_215_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [576, 1, 3, 3]> const_80_to_fp16 = const()[name = tensor<string, []>("const_80_to_fp16"), val = tensor<fp16, [576, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1186112)))];
            tensor<fp16, [576]> const_81_to_fp16 = const()[name = tensor<string, []>("const_81_to_fp16"), val = tensor<fp16, [576]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1196544)))];
            tensor<fp16, [1, 576, 16, 16]> input_217_cast_fp16 = conv(bias = const_81_to_fp16, dilations = input_215_dilations_0, groups = input_215_groups_0, pad = input_215_pad_0, pad_type = input_215_pad_type_0, strides = input_215_strides_0, weight = const_80_to_fp16, x = input_213_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, []> input_219_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_219_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_219_beta_0_to_fp16 = const()[name = tensor<string, []>("input_219_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 576, 16, 16]> input_219_cast_fp16 = clip(alpha = input_219_alpha_0_to_fp16, beta = input_219_beta_0_to_fp16, x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<string, []> input_221_pad_type_0 = const()[name = tensor<string, []>("input_221_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_221_strides_0 = const()[name = tensor<string, []>("input_221_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_221_pad_0 = const()[name = tensor<string, []>("input_221_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_221_dilations_0 = const()[name = tensor<string, []>("input_221_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_221_groups_0 = const()[name = tensor<string, []>("input_221_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [160, 576, 1, 1]> const_82_to_fp16 = const()[name = tensor<string, []>("const_82_to_fp16"), val = tensor<fp16, [160, 576, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1197760)))];
            tensor<fp16, [160]> const_83_to_fp16 = const()[name = tensor<string, []>("const_83_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1382144)))];
            tensor<fp16, [1, 160, 16, 16]> input_223_cast_fp16 = conv(bias = const_83_to_fp16, dilations = input_221_dilations_0, groups = input_221_groups_0, pad = input_221_pad_0, pad_type = input_221_pad_type_0, strides = input_221_strides_0, weight = const_82_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<string, []> input_225_pad_type_0 = const()[name = tensor<string, []>("input_225_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_225_strides_0 = const()[name = tensor<string, []>("input_225_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_225_pad_0 = const()[name = tensor<string, []>("input_225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_225_dilations_0 = const()[name = tensor<string, []>("input_225_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_225_groups_0 = const()[name = tensor<string, []>("input_225_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 160, 1, 1]> const_84_to_fp16 = const()[name = tensor<string, []>("const_84_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1382528)))];
            tensor<fp16, [960]> const_85_to_fp16 = const()[name = tensor<string, []>("const_85_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1689792)))];
            tensor<fp16, [1, 960, 16, 16]> input_227_cast_fp16 = conv(bias = const_85_to_fp16, dilations = input_225_dilations_0, groups = input_225_groups_0, pad = input_225_pad_0, pad_type = input_225_pad_type_0, strides = input_225_strides_0, weight = const_84_to_fp16, x = input_223_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<fp16, []> input_229_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_229_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_229_beta_0_to_fp16 = const()[name = tensor<string, []>("input_229_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 960, 16, 16]> input_229_cast_fp16 = clip(alpha = input_229_alpha_0_to_fp16, beta = input_229_beta_0_to_fp16, x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_231_groups_0 = const()[name = tensor<string, []>("input_231_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [2]> input_231_strides_0 = const()[name = tensor<string, []>("input_231_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_231_dilations_0 = const()[name = tensor<string, []>("input_231_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [960, 1, 3, 3]> const_86_to_fp16 = const()[name = tensor<string, []>("const_86_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1691776)))];
            tensor<fp16, [960]> const_87_to_fp16 = const()[name = tensor<string, []>("const_87_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1709120)))];
            tensor<fp16, [1, 960, 16, 16]> input_233_cast_fp16 = conv(bias = const_87_to_fp16, dilations = input_231_dilations_0, groups = input_231_groups_0, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = input_231_strides_0, weight = const_86_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<fp16, []> input_235_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_235_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_235_beta_0_to_fp16 = const()[name = tensor<string, []>("input_235_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 960, 16, 16]> input_235_cast_fp16 = clip(alpha = input_235_alpha_0_to_fp16, beta = input_235_beta_0_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<string, []> input_237_pad_type_0 = const()[name = tensor<string, []>("input_237_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_237_strides_0 = const()[name = tensor<string, []>("input_237_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_237_pad_0 = const()[name = tensor<string, []>("input_237_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_237_dilations_0 = const()[name = tensor<string, []>("input_237_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_237_groups_0 = const()[name = tensor<string, []>("input_237_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [160, 960, 1, 1]> const_88_to_fp16 = const()[name = tensor<string, []>("const_88_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1711104)))];
            tensor<fp16, [160]> const_89_to_fp16 = const()[name = tensor<string, []>("const_89_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2018368)))];
            tensor<fp16, [1, 160, 16, 16]> var_726_cast_fp16 = conv(bias = const_89_to_fp16, dilations = input_237_dilations_0, groups = input_237_groups_0, pad = input_237_pad_0, pad_type = input_237_pad_type_0, strides = input_237_strides_0, weight = const_88_to_fp16, x = input_235_cast_fp16)[name = tensor<string, []>("op_726_cast_fp16")];
            tensor<fp16, [1, 160, 16, 16]> input_239_cast_fp16 = add(x = input_223_cast_fp16, y = var_726_cast_fp16)[name = tensor<string, []>("input_239_cast_fp16")];
            tensor<string, []> input_241_pad_type_0 = const()[name = tensor<string, []>("input_241_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_241_strides_0 = const()[name = tensor<string, []>("input_241_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_241_pad_0 = const()[name = tensor<string, []>("input_241_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_241_dilations_0 = const()[name = tensor<string, []>("input_241_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_241_groups_0 = const()[name = tensor<string, []>("input_241_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 160, 1, 1]> const_90_to_fp16 = const()[name = tensor<string, []>("const_90_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2018752)))];
            tensor<fp16, [960]> const_91_to_fp16 = const()[name = tensor<string, []>("const_91_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2326016)))];
            tensor<fp16, [1, 960, 16, 16]> input_243_cast_fp16 = conv(bias = const_91_to_fp16, dilations = input_241_dilations_0, groups = input_241_groups_0, pad = input_241_pad_0, pad_type = input_241_pad_type_0, strides = input_241_strides_0, weight = const_90_to_fp16, x = input_239_cast_fp16)[name = tensor<string, []>("input_243_cast_fp16")];
            tensor<fp16, []> input_245_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_245_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_245_beta_0_to_fp16 = const()[name = tensor<string, []>("input_245_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 960, 16, 16]> input_245_cast_fp16 = clip(alpha = input_245_alpha_0_to_fp16, beta = input_245_beta_0_to_fp16, x = input_243_cast_fp16)[name = tensor<string, []>("input_245_cast_fp16")];
            tensor<string, []> input_247_pad_type_0 = const()[name = tensor<string, []>("input_247_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_247_pad_0 = const()[name = tensor<string, []>("input_247_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_247_groups_0 = const()[name = tensor<string, []>("input_247_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [2]> input_247_strides_0 = const()[name = tensor<string, []>("input_247_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_247_dilations_0 = const()[name = tensor<string, []>("input_247_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [960, 1, 3, 3]> const_92_to_fp16 = const()[name = tensor<string, []>("const_92_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2328000)))];
            tensor<fp16, [960]> const_93_to_fp16 = const()[name = tensor<string, []>("const_93_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2345344)))];
            tensor<fp16, [1, 960, 16, 16]> input_249_cast_fp16 = conv(bias = const_93_to_fp16, dilations = input_247_dilations_0, groups = input_247_groups_0, pad = input_247_pad_0, pad_type = input_247_pad_type_0, strides = input_247_strides_0, weight = const_92_to_fp16, x = input_245_cast_fp16)[name = tensor<string, []>("input_249_cast_fp16")];
            tensor<fp16, []> input_251_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_251_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_251_beta_0_to_fp16 = const()[name = tensor<string, []>("input_251_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 960, 16, 16]> input_251_cast_fp16 = clip(alpha = input_251_alpha_0_to_fp16, beta = input_251_beta_0_to_fp16, x = input_249_cast_fp16)[name = tensor<string, []>("input_251_cast_fp16")];
            tensor<string, []> input_253_pad_type_0 = const()[name = tensor<string, []>("input_253_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_253_strides_0 = const()[name = tensor<string, []>("input_253_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_253_pad_0 = const()[name = tensor<string, []>("input_253_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_253_dilations_0 = const()[name = tensor<string, []>("input_253_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_253_groups_0 = const()[name = tensor<string, []>("input_253_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [160, 960, 1, 1]> const_94_to_fp16 = const()[name = tensor<string, []>("const_94_to_fp16"), val = tensor<fp16, [160, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2347328)))];
            tensor<fp16, [160]> const_95_to_fp16 = const()[name = tensor<string, []>("const_95_to_fp16"), val = tensor<fp16, [160]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2654592)))];
            tensor<fp16, [1, 160, 16, 16]> var_771_cast_fp16 = conv(bias = const_95_to_fp16, dilations = input_253_dilations_0, groups = input_253_groups_0, pad = input_253_pad_0, pad_type = input_253_pad_type_0, strides = input_253_strides_0, weight = const_94_to_fp16, x = input_251_cast_fp16)[name = tensor<string, []>("op_771_cast_fp16")];
            tensor<fp16, [1, 160, 16, 16]> input_255_cast_fp16 = add(x = input_239_cast_fp16, y = var_771_cast_fp16)[name = tensor<string, []>("input_255_cast_fp16")];
            tensor<string, []> input_257_pad_type_0 = const()[name = tensor<string, []>("input_257_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_257_strides_0 = const()[name = tensor<string, []>("input_257_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_257_pad_0 = const()[name = tensor<string, []>("input_257_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_257_dilations_0 = const()[name = tensor<string, []>("input_257_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_257_groups_0 = const()[name = tensor<string, []>("input_257_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [960, 160, 1, 1]> const_96_to_fp16 = const()[name = tensor<string, []>("const_96_to_fp16"), val = tensor<fp16, [960, 160, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2654976)))];
            tensor<fp16, [960]> const_97_to_fp16 = const()[name = tensor<string, []>("const_97_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2962240)))];
            tensor<fp16, [1, 960, 16, 16]> input_259_cast_fp16 = conv(bias = const_97_to_fp16, dilations = input_257_dilations_0, groups = input_257_groups_0, pad = input_257_pad_0, pad_type = input_257_pad_type_0, strides = input_257_strides_0, weight = const_96_to_fp16, x = input_255_cast_fp16)[name = tensor<string, []>("input_259_cast_fp16")];
            tensor<fp16, []> input_261_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_261_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_261_beta_0_to_fp16 = const()[name = tensor<string, []>("input_261_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 960, 16, 16]> input_261_cast_fp16 = clip(alpha = input_261_alpha_0_to_fp16, beta = input_261_beta_0_to_fp16, x = input_259_cast_fp16)[name = tensor<string, []>("input_261_cast_fp16")];
            tensor<string, []> input_263_pad_type_0 = const()[name = tensor<string, []>("input_263_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_263_pad_0 = const()[name = tensor<string, []>("input_263_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, []> input_263_groups_0 = const()[name = tensor<string, []>("input_263_groups_0"), val = tensor<int32, []>(960)];
            tensor<int32, [2]> input_263_strides_0 = const()[name = tensor<string, []>("input_263_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_263_dilations_0 = const()[name = tensor<string, []>("input_263_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<fp16, [960, 1, 3, 3]> const_98_to_fp16 = const()[name = tensor<string, []>("const_98_to_fp16"), val = tensor<fp16, [960, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2964224)))];
            tensor<fp16, [960]> const_99_to_fp16 = const()[name = tensor<string, []>("const_99_to_fp16"), val = tensor<fp16, [960]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2981568)))];
            tensor<fp16, [1, 960, 16, 16]> input_265_cast_fp16 = conv(bias = const_99_to_fp16, dilations = input_263_dilations_0, groups = input_263_groups_0, pad = input_263_pad_0, pad_type = input_263_pad_type_0, strides = input_263_strides_0, weight = const_98_to_fp16, x = input_261_cast_fp16)[name = tensor<string, []>("input_265_cast_fp16")];
            tensor<fp16, []> input_267_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_267_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_267_beta_0_to_fp16 = const()[name = tensor<string, []>("input_267_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 960, 16, 16]> input_267_cast_fp16 = clip(alpha = input_267_alpha_0_to_fp16, beta = input_267_beta_0_to_fp16, x = input_265_cast_fp16)[name = tensor<string, []>("input_267_cast_fp16")];
            tensor<string, []> input_269_pad_type_0 = const()[name = tensor<string, []>("input_269_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_269_strides_0 = const()[name = tensor<string, []>("input_269_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_269_pad_0 = const()[name = tensor<string, []>("input_269_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_269_dilations_0 = const()[name = tensor<string, []>("input_269_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_269_groups_0 = const()[name = tensor<string, []>("input_269_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [320, 960, 1, 1]> const_100_to_fp16 = const()[name = tensor<string, []>("const_100_to_fp16"), val = tensor<fp16, [320, 960, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2983552)))];
            tensor<fp16, [320]> const_101_to_fp16 = const()[name = tensor<string, []>("const_101_to_fp16"), val = tensor<fp16, [320]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3598016)))];
            tensor<fp16, [1, 320, 16, 16]> input_271_cast_fp16 = conv(bias = const_101_to_fp16, dilations = input_269_dilations_0, groups = input_269_groups_0, pad = input_269_pad_0, pad_type = input_269_pad_type_0, strides = input_269_strides_0, weight = const_100_to_fp16, x = input_267_cast_fp16)[name = tensor<string, []>("input_271_cast_fp16")];
            tensor<string, []> input_273_pad_type_0 = const()[name = tensor<string, []>("input_273_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_273_strides_0 = const()[name = tensor<string, []>("input_273_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [4]> input_273_pad_0 = const()[name = tensor<string, []>("input_273_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_273_dilations_0 = const()[name = tensor<string, []>("input_273_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_273_groups_0 = const()[name = tensor<string, []>("input_273_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1280, 320, 1, 1]> const_102_to_fp16 = const()[name = tensor<string, []>("const_102_to_fp16"), val = tensor<fp16, [1280, 320, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3598720)))];
            tensor<fp16, [1280]> const_103_to_fp16 = const()[name = tensor<string, []>("const_103_to_fp16"), val = tensor<fp16, [1280]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4417984)))];
            tensor<fp16, [1, 1280, 16, 16]> input_275_cast_fp16 = conv(bias = const_103_to_fp16, dilations = input_273_dilations_0, groups = input_273_groups_0, pad = input_273_pad_0, pad_type = input_273_pad_type_0, strides = input_273_strides_0, weight = const_102_to_fp16, x = input_271_cast_fp16)[name = tensor<string, []>("input_275_cast_fp16")];
            tensor<fp16, []> input_277_alpha_0_to_fp16 = const()[name = tensor<string, []>("input_277_alpha_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, []> input_277_beta_0_to_fp16 = const()[name = tensor<string, []>("input_277_beta_0_to_fp16"), val = tensor<fp16, []>(0x1.8p+2)];
            tensor<fp16, [1, 1280, 16, 16]> input_277_cast_fp16 = clip(alpha = input_277_alpha_0_to_fp16, beta = input_277_beta_0_to_fp16, x = input_275_cast_fp16)[name = tensor<string, []>("input_277_cast_fp16")];
            tensor<int32, []> var_838 = const()[name = tensor<string, []>("op_838"), val = tensor<int32, []>(1)];
            tensor<fp32, []> x_3_scale_factor_height_0 = const()[name = tensor<string, []>("x_3_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> x_3_scale_factor_width_0 = const()[name = tensor<string, []>("x_3_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 1280, 32, 32]> x_3_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = x_3_scale_factor_height_0, scale_factor_width = x_3_scale_factor_width_0, x = input_277_cast_fp16)[name = tensor<string, []>("x_3_cast_fp16")];
            tensor<bool, []> input_279_interleave_0 = const()[name = tensor<string, []>("input_279_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1376, 32, 32]> input_279_cast_fp16 = concat(axis = var_838, interleave = input_279_interleave_0, values = (x_3_cast_fp16, input_207_cast_fp16))[name = tensor<string, []>("input_279_cast_fp16")];
            tensor<string, []> input_281_pad_type_0 = const()[name = tensor<string, []>("input_281_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_281_pad_0 = const()[name = tensor<string, []>("input_281_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_281_strides_0 = const()[name = tensor<string, []>("input_281_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_281_dilations_0 = const()[name = tensor<string, []>("input_281_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_281_groups_0 = const()[name = tensor<string, []>("input_281_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 1376, 3, 3]> const_104_to_fp16 = const()[name = tensor<string, []>("const_104_to_fp16"), val = tensor<fp16, [256, 1376, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4420608)))];
            tensor<fp16, [256]> const_105_to_fp16 = const()[name = tensor<string, []>("const_105_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10761280)))];
            tensor<fp16, [1, 256, 32, 32]> input_283_cast_fp16 = conv(bias = const_105_to_fp16, dilations = input_281_dilations_0, groups = input_281_groups_0, pad = input_281_pad_0, pad_type = input_281_pad_type_0, strides = input_281_strides_0, weight = const_104_to_fp16, x = input_279_cast_fp16)[name = tensor<string, []>("input_283_cast_fp16")];
            tensor<fp16, [1, 256, 32, 32]> input_285_cast_fp16 = relu(x = input_283_cast_fp16)[name = tensor<string, []>("input_285_cast_fp16")];
            tensor<string, []> input_287_pad_type_0 = const()[name = tensor<string, []>("input_287_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_287_pad_0 = const()[name = tensor<string, []>("input_287_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_287_strides_0 = const()[name = tensor<string, []>("input_287_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_287_dilations_0 = const()[name = tensor<string, []>("input_287_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_287_groups_0 = const()[name = tensor<string, []>("input_287_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 3, 3]> const_106_to_fp16 = const()[name = tensor<string, []>("const_106_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10761856)))];
            tensor<fp16, [256]> const_107_to_fp16 = const()[name = tensor<string, []>("const_107_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11941568)))];
            tensor<fp16, [1, 256, 32, 32]> input_289_cast_fp16 = conv(bias = const_107_to_fp16, dilations = input_287_dilations_0, groups = input_287_groups_0, pad = input_287_pad_0, pad_type = input_287_pad_type_0, strides = input_287_strides_0, weight = const_106_to_fp16, x = input_285_cast_fp16)[name = tensor<string, []>("input_289_cast_fp16")];
            tensor<fp16, [1, 256, 32, 32]> input_291_cast_fp16 = relu(x = input_289_cast_fp16)[name = tensor<string, []>("input_291_cast_fp16")];
            tensor<fp32, []> x_5_scale_factor_height_0 = const()[name = tensor<string, []>("x_5_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> x_5_scale_factor_width_0 = const()[name = tensor<string, []>("x_5_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 64, 64]> x_5_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = x_5_scale_factor_height_0, scale_factor_width = x_5_scale_factor_width_0, x = input_291_cast_fp16)[name = tensor<string, []>("x_5_cast_fp16")];
            tensor<bool, []> input_293_interleave_0 = const()[name = tensor<string, []>("input_293_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 288, 64, 64]> input_293_cast_fp16 = concat(axis = var_838, interleave = input_293_interleave_0, values = (x_5_cast_fp16, input_95_cast_fp16))[name = tensor<string, []>("input_293_cast_fp16")];
            tensor<string, []> input_295_pad_type_0 = const()[name = tensor<string, []>("input_295_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_295_pad_0 = const()[name = tensor<string, []>("input_295_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_295_strides_0 = const()[name = tensor<string, []>("input_295_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_295_dilations_0 = const()[name = tensor<string, []>("input_295_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_295_groups_0 = const()[name = tensor<string, []>("input_295_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 288, 3, 3]> const_108_to_fp16 = const()[name = tensor<string, []>("const_108_to_fp16"), val = tensor<fp16, [128, 288, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11942144)))];
            tensor<fp16, [128]> const_109_to_fp16 = const()[name = tensor<string, []>("const_109_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12605760)))];
            tensor<fp16, [1, 128, 64, 64]> input_297_cast_fp16 = conv(bias = const_109_to_fp16, dilations = input_295_dilations_0, groups = input_295_groups_0, pad = input_295_pad_0, pad_type = input_295_pad_type_0, strides = input_295_strides_0, weight = const_108_to_fp16, x = input_293_cast_fp16)[name = tensor<string, []>("input_297_cast_fp16")];
            tensor<fp16, [1, 128, 64, 64]> input_299_cast_fp16 = relu(x = input_297_cast_fp16)[name = tensor<string, []>("input_299_cast_fp16")];
            tensor<string, []> input_301_pad_type_0 = const()[name = tensor<string, []>("input_301_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_301_pad_0 = const()[name = tensor<string, []>("input_301_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_301_strides_0 = const()[name = tensor<string, []>("input_301_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_301_dilations_0 = const()[name = tensor<string, []>("input_301_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_301_groups_0 = const()[name = tensor<string, []>("input_301_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> const_110_to_fp16 = const()[name = tensor<string, []>("const_110_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12606080)))];
            tensor<fp16, [128]> const_111_to_fp16 = const()[name = tensor<string, []>("const_111_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12901056)))];
            tensor<fp16, [1, 128, 64, 64]> input_303_cast_fp16 = conv(bias = const_111_to_fp16, dilations = input_301_dilations_0, groups = input_301_groups_0, pad = input_301_pad_0, pad_type = input_301_pad_type_0, strides = input_301_strides_0, weight = const_110_to_fp16, x = input_299_cast_fp16)[name = tensor<string, []>("input_303_cast_fp16")];
            tensor<fp16, [1, 128, 64, 64]> input_305_cast_fp16 = relu(x = input_303_cast_fp16)[name = tensor<string, []>("input_305_cast_fp16")];
            tensor<fp32, []> x_7_scale_factor_height_0 = const()[name = tensor<string, []>("x_7_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> x_7_scale_factor_width_0 = const()[name = tensor<string, []>("x_7_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 128, 128, 128]> x_7_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = x_7_scale_factor_height_0, scale_factor_width = x_7_scale_factor_width_0, x = input_305_cast_fp16)[name = tensor<string, []>("x_7_cast_fp16")];
            tensor<bool, []> input_307_interleave_0 = const()[name = tensor<string, []>("input_307_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 152, 128, 128]> input_307_cast_fp16 = concat(axis = var_838, interleave = input_307_interleave_0, values = (x_7_cast_fp16, input_47_cast_fp16))[name = tensor<string, []>("input_307_cast_fp16")];
            tensor<string, []> input_309_pad_type_0 = const()[name = tensor<string, []>("input_309_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_309_pad_0 = const()[name = tensor<string, []>("input_309_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_309_strides_0 = const()[name = tensor<string, []>("input_309_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_309_dilations_0 = const()[name = tensor<string, []>("input_309_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_309_groups_0 = const()[name = tensor<string, []>("input_309_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 152, 3, 3]> const_112_to_fp16 = const()[name = tensor<string, []>("const_112_to_fp16"), val = tensor<fp16, [64, 152, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12901376)))];
            tensor<fp16, [64]> const_113_to_fp16 = const()[name = tensor<string, []>("const_113_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13076544)))];
            tensor<fp16, [1, 64, 128, 128]> input_311_cast_fp16 = conv(bias = const_113_to_fp16, dilations = input_309_dilations_0, groups = input_309_groups_0, pad = input_309_pad_0, pad_type = input_309_pad_type_0, strides = input_309_strides_0, weight = const_112_to_fp16, x = input_307_cast_fp16)[name = tensor<string, []>("input_311_cast_fp16")];
            tensor<fp16, [1, 64, 128, 128]> input_313_cast_fp16 = relu(x = input_311_cast_fp16)[name = tensor<string, []>("input_313_cast_fp16")];
            tensor<string, []> input_315_pad_type_0 = const()[name = tensor<string, []>("input_315_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_315_pad_0 = const()[name = tensor<string, []>("input_315_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_315_strides_0 = const()[name = tensor<string, []>("input_315_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_315_dilations_0 = const()[name = tensor<string, []>("input_315_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_315_groups_0 = const()[name = tensor<string, []>("input_315_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_114_to_fp16 = const()[name = tensor<string, []>("const_114_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13076736)))];
            tensor<fp16, [64]> const_115_to_fp16 = const()[name = tensor<string, []>("const_115_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13150528)))];
            tensor<fp16, [1, 64, 128, 128]> input_317_cast_fp16 = conv(bias = const_115_to_fp16, dilations = input_315_dilations_0, groups = input_315_groups_0, pad = input_315_pad_0, pad_type = input_315_pad_type_0, strides = input_315_strides_0, weight = const_114_to_fp16, x = input_313_cast_fp16)[name = tensor<string, []>("input_317_cast_fp16")];
            tensor<fp16, [1, 64, 128, 128]> input_319_cast_fp16 = relu(x = input_317_cast_fp16)[name = tensor<string, []>("input_319_cast_fp16")];
            tensor<fp32, []> x_scale_factor_height_0 = const()[name = tensor<string, []>("x_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> x_scale_factor_width_0 = const()[name = tensor<string, []>("x_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 64, 256, 256]> x_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = x_scale_factor_height_0, scale_factor_width = x_scale_factor_width_0, x = input_319_cast_fp16)[name = tensor<string, []>("x_cast_fp16")];
            tensor<bool, []> input_321_interleave_0 = const()[name = tensor<string, []>("input_321_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 80, 256, 256]> input_321_cast_fp16 = concat(axis = var_838, interleave = input_321_interleave_0, values = (x_cast_fp16, input_15_cast_fp16))[name = tensor<string, []>("input_321_cast_fp16")];
            tensor<string, []> input_323_pad_type_0 = const()[name = tensor<string, []>("input_323_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_323_pad_0 = const()[name = tensor<string, []>("input_323_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_323_strides_0 = const()[name = tensor<string, []>("input_323_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_323_dilations_0 = const()[name = tensor<string, []>("input_323_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_323_groups_0 = const()[name = tensor<string, []>("input_323_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 80, 3, 3]> const_116_to_fp16 = const()[name = tensor<string, []>("const_116_to_fp16"), val = tensor<fp16, [32, 80, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13150720)))];
            tensor<fp16, [32]> const_117_to_fp16 = const()[name = tensor<string, []>("const_117_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13196864)))];
            tensor<fp16, [1, 32, 256, 256]> input_325_cast_fp16 = conv(bias = const_117_to_fp16, dilations = input_323_dilations_0, groups = input_323_groups_0, pad = input_323_pad_0, pad_type = input_323_pad_type_0, strides = input_323_strides_0, weight = const_116_to_fp16, x = input_321_cast_fp16)[name = tensor<string, []>("input_325_cast_fp16")];
            tensor<fp16, [1, 32, 256, 256]> input_327_cast_fp16 = relu(x = input_325_cast_fp16)[name = tensor<string, []>("input_327_cast_fp16")];
            tensor<string, []> input_329_pad_type_0 = const()[name = tensor<string, []>("input_329_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_329_pad_0 = const()[name = tensor<string, []>("input_329_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_329_strides_0 = const()[name = tensor<string, []>("input_329_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_329_dilations_0 = const()[name = tensor<string, []>("input_329_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_329_groups_0 = const()[name = tensor<string, []>("input_329_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [32, 32, 3, 3]> const_118_to_fp16 = const()[name = tensor<string, []>("const_118_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13196992)))];
            tensor<fp16, [32]> const_119_to_fp16 = const()[name = tensor<string, []>("const_119_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13215488)))];
            tensor<fp16, [1, 32, 256, 256]> input_331_cast_fp16 = conv(bias = const_119_to_fp16, dilations = input_329_dilations_0, groups = input_329_groups_0, pad = input_329_pad_0, pad_type = input_329_pad_type_0, strides = input_329_strides_0, weight = const_118_to_fp16, x = input_327_cast_fp16)[name = tensor<string, []>("input_331_cast_fp16")];
            tensor<fp16, [1, 32, 256, 256]> input_333_cast_fp16 = relu(x = input_331_cast_fp16)[name = tensor<string, []>("input_333_cast_fp16")];
            tensor<fp32, []> input_335_scale_factor_height_0 = const()[name = tensor<string, []>("input_335_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> input_335_scale_factor_width_0 = const()[name = tensor<string, []>("input_335_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 32, 512, 512]> input_335_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = input_335_scale_factor_height_0, scale_factor_width = input_335_scale_factor_width_0, x = input_333_cast_fp16)[name = tensor<string, []>("input_335_cast_fp16")];
            tensor<string, []> input_337_pad_type_0 = const()[name = tensor<string, []>("input_337_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_337_pad_0 = const()[name = tensor<string, []>("input_337_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_337_strides_0 = const()[name = tensor<string, []>("input_337_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_337_dilations_0 = const()[name = tensor<string, []>("input_337_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_337_groups_0 = const()[name = tensor<string, []>("input_337_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [16, 32, 3, 3]> const_120_to_fp16 = const()[name = tensor<string, []>("const_120_to_fp16"), val = tensor<fp16, [16, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13215616)))];
            tensor<fp16, [16]> const_121_to_fp16 = const()[name = tensor<string, []>("const_121_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13224896)))];
            tensor<fp16, [1, 16, 512, 512]> input_339_cast_fp16 = conv(bias = const_121_to_fp16, dilations = input_337_dilations_0, groups = input_337_groups_0, pad = input_337_pad_0, pad_type = input_337_pad_type_0, strides = input_337_strides_0, weight = const_120_to_fp16, x = input_335_cast_fp16)[name = tensor<string, []>("input_339_cast_fp16")];
            tensor<fp16, [1, 16, 512, 512]> input_341_cast_fp16 = relu(x = input_339_cast_fp16)[name = tensor<string, []>("input_341_cast_fp16")];
            tensor<string, []> input_343_pad_type_0 = const()[name = tensor<string, []>("input_343_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_343_pad_0 = const()[name = tensor<string, []>("input_343_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_343_strides_0 = const()[name = tensor<string, []>("input_343_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_343_dilations_0 = const()[name = tensor<string, []>("input_343_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_343_groups_0 = const()[name = tensor<string, []>("input_343_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [16, 16, 3, 3]> const_122_to_fp16 = const()[name = tensor<string, []>("const_122_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13225024)))];
            tensor<fp16, [16]> const_123_to_fp16 = const()[name = tensor<string, []>("const_123_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13229696)))];
            tensor<fp16, [1, 16, 512, 512]> input_345_cast_fp16 = conv(bias = const_123_to_fp16, dilations = input_343_dilations_0, groups = input_343_groups_0, pad = input_343_pad_0, pad_type = input_343_pad_type_0, strides = input_343_strides_0, weight = const_122_to_fp16, x = input_341_cast_fp16)[name = tensor<string, []>("input_345_cast_fp16")];
            tensor<fp16, [1, 16, 512, 512]> input_cast_fp16 = relu(x = input_345_cast_fp16)[name = tensor<string, []>("input_cast_fp16")];
            tensor<string, []> var_1034_pad_type_0 = const()[name = tensor<string, []>("op_1034_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1034_pad_0 = const()[name = tensor<string, []>("op_1034_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> var_1034_strides_0 = const()[name = tensor<string, []>("op_1034_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1034_dilations_0 = const()[name = tensor<string, []>("op_1034_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1034_groups_0 = const()[name = tensor<string, []>("op_1034_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [19, 16, 3, 3]> segmentation_head_0_weight_to_fp16 = const()[name = tensor<string, []>("segmentation_head_0_weight_to_fp16"), val = tensor<fp16, [19, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13229824)))];
            tensor<fp16, [19]> segmentation_head_0_bias_to_fp16 = const()[name = tensor<string, []>("segmentation_head_0_bias_to_fp16"), val = tensor<fp16, [19]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13235392)))];
            tensor<fp16, [1, 19, 512, 512]> var_1034_cast_fp16 = conv(bias = segmentation_head_0_bias_to_fp16, dilations = var_1034_dilations_0, groups = var_1034_groups_0, pad = var_1034_pad_0, pad_type = var_1034_pad_type_0, strides = var_1034_strides_0, weight = segmentation_head_0_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_1034_cast_fp16")];
            tensor<string, []> var_1034_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_1034_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 19, 512, 512]> output = cast(dtype = var_1034_cast_fp16_to_fp32_dtype_0, x = var_1034_cast_fp16)[name = tensor<string, []>("cast_0")];
        } -> (output);
}